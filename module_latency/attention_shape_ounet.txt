query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
value linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
 25%|██████████████████████████▌                                                                               | 1/4 [00:01<00:03,  1.19s/it]query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
value linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
value linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
value linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 64, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 64, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 64, 160])
out linear torch.Size([1, 64, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 64, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
value linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 256, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
key linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
value linear torch.Size([1, 77, 768]) * torch.Size([1280, 768]) = torch.Size([1, 77, 1280])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 256, 160]) * torch.Size([1, 8, 77, 160]) * torch.Size([1, 8, 77, 160]) = torch.Size([1, 8, 256, 160])
out linear torch.Size([1, 256, 1280]) * torch.Size([1280, 1280]) = torch.Size([1, 256, 1280])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
value linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 1024, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
key linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
value linear torch.Size([1, 77, 768]) * torch.Size([640, 768]) = torch.Size([1, 77, 640])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 1024, 80]) * torch.Size([1, 8, 77, 80]) * torch.Size([1, 8, 77, 80]) = torch.Size([1, 8, 1024, 80])
out linear torch.Size([1, 1024, 640]) * torch.Size([640, 640]) = torch.Size([1, 1024, 640])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
value linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 4096, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
query linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])
key linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
value linear torch.Size([1, 77, 768]) * torch.Size([320, 768]) = torch.Size([1, 77, 320])
Softmax(QK.transpose(-2,-1))V torch.Size([1, 8, 4096, 40]) * torch.Size([1, 8, 77, 40]) * torch.Size([1, 8, 77, 40]) = torch.Size([1, 8, 4096, 40])
out linear torch.Size([1, 4096, 320]) * torch.Size([320, 320]) = torch.Size([1, 4096, 320])